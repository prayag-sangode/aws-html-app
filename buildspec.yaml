version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "058264559032"
    AWS_DEFAULT_REGION: "us-east-1"
    IMAGE_REPO_NAME: "myhtml-app"
    KUBERNETES_NAMESPACE: "default"
    CLUSTER_NAME: "my-cluster"  # Replace with your EKS cluster name

phases:
  install:
    commands:
      - echo "Installing dependencies"
      - echo "Installing kubectl"
      - curl -LO "https://dl.k8s.io/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
  pre_build:
    commands:
      - echo "Logging into Amazon ECR"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Configuring kubectl"
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_DEFAULT_REGION
  build:
    commands:
      - echo "Building the Docker image"
      - docker build -t $IMAGE_REPO_NAME:latest .
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  post_build:
    commands:
      - echo "Pushing the Docker image to ECR"
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - echo "Image pushed to ECR"
      #- echo "Deploying to Kubernetes"
      #- kubectl apply -f manifests/deployment.yaml --namespace $KUBERNETES_NAMESPACE

artifacts:
  files:
    - '**/*'
  discard-paths: yes
